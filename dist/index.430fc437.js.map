{"mappings":"AAAA,EAAsN,AAAtN,oNAAsN;AACtN,EAA4C,AAA5C,0CAA4C;AAE5C,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACxC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACvB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACnE,CAAC,EAAE,CAAC,GAAG,IAAI;IACZ,CAAC;AACF,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAiB,AAAjB,eAAiB;eACF,UAAU,GAAG,CAAC;IAC5B,GAAG,CAAC,CAAC;QACJ,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CACtB,CAA2E;QAE5E,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAE3B,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAE7D,EAAwE,AAAxE,sEAAwE;QACxE,EAAiC,AAAjC,+BAAiC;QACjC,EAAiE,AAAjE,+DAAiE;QACjE,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI;QAC1B,EAAwC,AAAxC,sCAAwC;QACxC,MAAM,GAAG,CAAC;YACT,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;QAChC,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM;QAElB,EAA2B,AAA3B,yBAA2B;QAC3B,KAAK,CAAC,MAAM,IAAI,sDAEA,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,4EAEvC,EAAE,MAAM,CAAC,KAAK,CAAC,0SASsC,EAC/D,MAAM,CAAC,WAAW,CAClB,8SAO8D,EAC9D,MAAM,CAAC,QAAQ,CACf,s/BAgCE,EAAE,MAAM,CAAC,WAAW,CACtB,GAAG,EAAE,GAAG,GAAK,CAAC;YACd,MAAM,EAAE,uNAK8B,EAAE,GAAG,CAAC,QAAQ,CAAC,kGAEhB,EAAE,GAAG,CAAC,IAAI,CAAC,wBACtC,EAAE,GAAG,CAAC,WAAW,CAAC,kDAGxB;QACL,CAAC,EACA,IAAI,CAAC,CAAE,GAAE,yQAS2B,EACpC,MAAM,CAAC,SAAS,CAChB,kJAKU,EAAE,MAAM,CAAC,SAAS,CAAC,8NAS/B;QAEF,EAA+B,AAA/B,6BAA+B;QAC/B,eAAe,CAAC,SAAS,GAAG,CAAE;QAE9B,EAAmC,AAAnC,iCAAmC;QACnC,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,MAAM;IACxD,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK;IACpB,CAAC;AACF,CAAC;AAED,UAAU","sources":["src/js/controller.js"],"sourcesContent":["//Since when we use the parcel we loose the folder structure, we have to change the src of the icons in the template literal that is rendering the recipe from the API. One way to fix this is to import those images:\r\n// import icons from \"url:../img/icons.svg\";\r\n\r\nconst recipeContainer = document.querySelector(\".recipe\");\r\n\r\nconst timeout = function (s) {\r\n\treturn new Promise(function (_, reject) {\r\n\t\tsetTimeout(function () {\r\n\t\t\treject(new Error(`Request took too long! Timeout after ${s} second`));\r\n\t\t}, s * 1000);\r\n\t});\r\n};\r\n\r\n// https://forkify-api.herokuapp.com/v2\r\n\r\n//First API Call:\r\nasync function showRecipe() {\r\n\ttry {\r\n\t\tconst res = await fetch(\r\n\t\t\t\"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc8fd\"\r\n\t\t);\r\n\t\tconst data = await res.json();\r\n\r\n\t\tif (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n\t\t//Creating a new variable to manipulate the recipe result from the call:\r\n\t\t// let recipe = data.data.recipe;\r\n\t\t//Since they have the same name we can use destructuring already:\r\n\t\tlet { recipe } = data.data;\r\n\t\t//Now just renaming the properties name:\r\n\t\trecipe = {\r\n\t\t\tid: recipe.id,\r\n\t\t\ttitle: recipe.title,\r\n\t\t\tpublisher: recipe.publisher,\r\n\t\t\tsourceUrl: recipe.source_url,\r\n\t\t\timage: recipe.image_url,\r\n\t\t\tservings: recipe.servings,\r\n\t\t\tcookingTime: recipe.cooking_time,\r\n\t\t\tingredients: recipe.ingredients,\r\n\t\t};\r\n\t\tconsole.log(recipe);\r\n\r\n\t\t//Now rendering the recipe:\r\n\t\tconst markup = `\r\n      <figure class=\"recipe__fig\">\r\n        <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\r\n        <h1 class=\"recipe__title\">\r\n          <span>${recipe.title}</span>\r\n        </h1>\r\n      </figure>\r\n\r\n      <div class=\"recipe__details\">\r\n        <div class=\"recipe__info\">\r\n          <svg class=\"recipe__info-icon\">\r\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\r\n          </svg>\r\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${\r\n\t\t\t\t\t\trecipe.cookingTime\r\n\t\t\t\t\t}</span>\r\n          <span class=\"recipe__info-text\">minutes</span>\r\n        </div>\r\n        <div class=\"recipe__info\">\r\n          <svg class=\"recipe__info-icon\">\r\n            <use href=\"src/img/icons.svg#icon-users\"></use>\r\n          </svg>\r\n          <span class=\"recipe__info-data recipe__info-data--people\">${\r\n\t\t\t\t\t\trecipe.servings\r\n\t\t\t\t\t}</span>\r\n          <span class=\"recipe__info-text\">servings</span>\r\n\r\n          <div class=\"recipe__info-buttons\">\r\n            <button class=\"btn--tiny btn--increase-servings\">\r\n              <svg>\r\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn--tiny btn--increase-servings\">\r\n              <svg>\r\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"recipe__user-generated\">\r\n          <svg>\r\n            <use href=\"src/img/icons.svg#icon-user\"></use>\r\n          </svg>\r\n        </div>\r\n        <button class=\"btn--round\">\r\n          <svg class=\"\">\r\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"recipe__ingredients\">\r\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n        <ul class=\"recipe__ingredient-list\">\r\n        ${recipe.ingredients\r\n\t\t\t\t\t.map((ing) => {\r\n\t\t\t\t\t\treturn `\r\n            <li class=\"recipe__ingredient\">\r\n              <svg class=\"recipe__icon\">\r\n                <use href=\"src/img/icons.svg#icon-check\"></use>\r\n              </svg>\r\n              <div class=\"recipe__quantity\">${ing.quantity}</div>\r\n              <div class=\"recipe__description\">\r\n                <span class=\"recipe__unit\">${ing.unit}</span>\r\n                ${ing.description}\r\n              </div>\r\n            </li>\r\n          `;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.join(\"\")}\r\n\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"recipe__directions\">\r\n        <h2 class=\"heading--2\">How to cook it</h2>\r\n        <p class=\"recipe__directions-text\">\r\n          This recipe was carefully designed and tested by\r\n          <span class=\"recipe__publisher\">${\r\n\t\t\t\t\t\trecipe.publisher\r\n\t\t\t\t\t}</span>. Please check out\r\n          directions at their website.\r\n        </p>\r\n        <a\r\n          class=\"btn--small recipe__btn\"\r\n          href=\"${recipe.sourceUrl}\"\r\n          target=\"_blank\"\r\n        >\r\n          <span>Directions</span>\r\n          <svg class=\"search__icon\">\r\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\r\n          </svg>\r\n        </a>\r\n      </div>\r\n    `;\r\n\r\n\t\t//Removing the default message:\r\n\t\trecipeContainer.innerHTML = \"\";\r\n\r\n\t\t//Inserting the markup to the html:\r\n\t\trecipeContainer.insertAdjacentHTML(\"afterbegin\", markup);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n}\r\n\r\nshowRecipe();\r\n"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}